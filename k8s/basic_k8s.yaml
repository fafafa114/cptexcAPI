apiVersion: apps/v1
kind: Deployment
metadata:
  name: cptexcapi-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: cptexcapi
  template:
    metadata:
      labels:
        app: cptexcapi
    spec:
      containers:
      - name: cptexcapi
        image: cptexcapi:latest
        imagePullPolicy: IfNotPresent
        resources:
          requests:
            cpu: "200m"
          limits:
            cpu: "400m"
        ports:
        - containerPort: 8080
        env:
          - name: FLASK_APP
            value: "main.py"
          - name: FLASK_ENV
            value: "development"
          - name: DATABASE_HOST
            value: "postgres"
          - name: DATABASE_PORT
            value: "5432"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres
spec:
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
        - name: postgres
          image: postgres:14
          env:
            - name: POSTGRES_DB
              value: "postgres"
            - name: POSTGRES_USER
              value: "postgres"
            - name: POSTGRES_PASSWORD
              value: "123123"
          ports:
            - containerPort: 5432
          volumeMounts:
            - mountPath: /var/lib/postgresql/data
              name: postgres-storage
      volumes:
        - name: postgres-storage
          persistentVolumeClaim:
            claimName: postgres-pvc

---
apiVersion: v1
kind: Service
metadata:
  name: postgres
spec:
  ports:
    - port: 5432
  selector:
    app: postgres
---
apiVersion: v1
kind: Service
metadata:
  name: web-app-service
  namespace: default
spec:
  type: NodePort
  ports:
    - port: 8080
      targetPort: 8080
      nodePort: 30000
  selector:
    app: cptexcapi